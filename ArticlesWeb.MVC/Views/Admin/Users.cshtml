@using System.Security.Claims
@model List<ArticlesWeb.Entities.DbEntities.User>
@{
    Layout = "_LayoutAdmin";
    
    var currentUserId = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Sid)!.Value;
    var currentUser = Model.FirstOrDefault(u => u.UserId == currentUserId);
    Model.Remove(currentUser);

    string message = TempData.ContainsKey("Message") ? TempData["Message"] as string : null;
}

@{
    if (!String.IsNullOrEmpty(message))
    {
        <div class="alert alert-primary" role="alert">
            @message
        </div>
    }
}

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Username</th>
            <th scope="col">Fullname</th>
            <th scope="col">Email</th>
            <th scope="col">Birthday</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var user in Model)
    { 
        <tr>
            <td>@user.Username</td>
            <td>@user.Fullname</td>
            <td>@user.Email</td>
            <td>@user.Birthday</td>
            <td><a class="btn btn-primary" href="@Url.Action("UpdateUsersProfile","Admin", new { userId = @user.UserId })">Düzenle</a></td>
            <td><a class="btn btn-danger" href="@Url.Action("DeleteUser","Admin", new { userId = @user.UserId })">Sil</a></td>
        </tr>
    }
    </tbody>
</table>